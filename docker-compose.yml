
services:

  # MySQL service to store your data
  mysql:
    image: mysql:8.0.38
    container_name: mysql-ranch_1.0
    restart: unless-stopped
    ports:
     - "3306:3306"
    volumes: 
      - mysqldata:/var/lib/mysql
      - ./mysql_custom.cnf:/etc/mysql/conf.d/mysql_custom.cnf
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - MYSQL_ROOT_PASSWORD=ranch
      - DB_PASSWORD=ranch
      - DATABASE_NAME=ranch_database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask service to serve your web pages (including the graphs)
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_USER: root
      MYSQL_ROOT_PASSWORD: ranch
      DATABASE_NAME: ranch_database
    volumes:
      - ./src:/src
    working_dir: /src
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "5000:5000"  # Expose Flask on port 5000

  # ChirpStack and related services
  chirpstack:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    ports:
      - "8080:8080"

  # Other ChirpStack services (gateway bridge, etc.)
  # ...

  # Postgres service (for ChirpStack)
  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=chirpstack
      - POSTGRES_PASSWORD=chirpstack
      - POSTGRES_DB=chirpstack

  # Redis service
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 300 1 --save 60 100 --appendonly no
    volumes:
      - redisdata:/data

  # Mosquitto (MQTT) broker
  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "8883:8883"
    volumes: 
      - ./configuration/mosquitto/config/:/mosquitto/config/
      - ./configuration/mosquitto/confed/:/mosquitto/confed/
      - ./configuration/mosquitto/certs/:/mosquitto/certs/
      - ./configuration/mosquitto/logs/:/var/log/mosquitto/

volumes:
  postgresqldata:
  redisdata:
  mysqldata:
    name: mysql_ranch_data  # Safe, explicit volume
